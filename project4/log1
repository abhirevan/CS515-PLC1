Configuring platform...
[Linux]
compiling:

return 4;
* TMP FILES:
*  c_obj/tmp5468d661.s
*  c_obj/tmp5468d661.o
*  c_bin/tmp5468d661
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d661.o c_obj/tmp5468d661.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d661 c_obj/tmp5468d661.o runtime.c   
* ./c_bin/tmp5468d661 42 > c_bin/tmp5468d661.out 2>&1
compiling:
int x = 3;
return x;
* TMP FILES:
*  c_obj/tmp5468d662.s
*  c_obj/tmp5468d662.o
*  c_bin/tmp5468d662
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d662.o c_obj/tmp5468d662.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d662 c_obj/tmp5468d662.o runtime.c   
* ./c_bin/tmp5468d662 42 > c_bin/tmp5468d662.out 2>&1
compiling:
int x = 3;
int y = 4;
return x + y;
* TMP FILES:
*  c_obj/tmp5468d663.s
*  c_obj/tmp5468d663.o
*  c_bin/tmp5468d663
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d663.o c_obj/tmp5468d663.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d663 c_obj/tmp5468d663.o runtime.c   
* ./c_bin/tmp5468d663 42 > c_bin/tmp5468d663.out 2>&1
compiling:
int x = 3;
if (x == 0) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d664.s
*  c_obj/tmp5468d664.o
*  c_bin/tmp5468d664
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d664.o c_obj/tmp5468d664.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d664 c_obj/tmp5468d664.o runtime.c   
* ./c_bin/tmp5468d664 42 > c_bin/tmp5468d664.out 2>&1
compiling:
int x = 3;
if (x == 3) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d665.s
*  c_obj/tmp5468d665.o
*  c_bin/tmp5468d665
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d665.o c_obj/tmp5468d665.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d665 c_obj/tmp5468d665.o runtime.c   
* ./c_bin/tmp5468d665 42 > c_bin/tmp5468d665.out 2>&1
compiling:
int x = 3;
if (x == 0) {
  x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d666.s
*  c_obj/tmp5468d666.o
*  c_bin/tmp5468d666
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d666.o c_obj/tmp5468d666.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d666 c_obj/tmp5468d666.o runtime.c   
* ./c_bin/tmp5468d666 42 > c_bin/tmp5468d666.out 2>&1
compiling:
int x = 1;
{
  int x = 2;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d667.s
*  c_obj/tmp5468d667.o
*  c_bin/tmp5468d667
compiling:
int x = 1;
int y = 0;
{
  int x = 4;
  y = y + x;
} y = y + x;
return y;
* TMP FILES:
*  c_obj/tmp5468d667.s
*  c_obj/tmp5468d667.o
*  c_bin/tmp5468d667
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp5468d667.s
*  c_obj/tmp5468d667.o
*  c_bin/tmp5468d667
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d667.o c_obj/tmp5468d667.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d667 c_obj/tmp5468d667.o runtime.c   
* ./c_bin/tmp5468d667 42 > c_bin/tmp5468d667.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp5468d668.s
*  c_obj/tmp5468d668.o
*  c_bin/tmp5468d668
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d668.o c_obj/tmp5468d668.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d668 c_obj/tmp5468d668.o runtime.c   
* ./c_bin/tmp5468d668 42 > c_bin/tmp5468d668.out 2>&1
compiling:
int x = 3 + 4;
int y = 17 * 5;
int z = 0;
if (x == y) z = 3; else z = 4;
return z;
* TMP FILES:
*  c_obj/tmp5468d669.s
*  c_obj/tmp5468d669.o
*  c_bin/tmp5468d669
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d669.o c_obj/tmp5468d669.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d669 c_obj/tmp5468d669.o runtime.c   
* ./c_bin/tmp5468d669 42 > c_bin/tmp5468d669.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp5468d66a.s
*  c_obj/tmp5468d66a.o
*  c_bin/tmp5468d66a
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66a.o c_obj/tmp5468d66a.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66a c_obj/tmp5468d66a.o runtime.c   
* ./c_bin/tmp5468d66a 42 > c_bin/tmp5468d66a.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d66b.s
*  c_obj/tmp5468d66b.o
*  c_bin/tmp5468d66b
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66b.o c_obj/tmp5468d66b.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66b c_obj/tmp5468d66b.o runtime.c   
* ./c_bin/tmp5468d66b 42 > c_bin/tmp5468d66b.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d66c.s
*  c_obj/tmp5468d66c.o
*  c_bin/tmp5468d66c
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66c.o c_obj/tmp5468d66c.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66c c_obj/tmp5468d66c.o runtime.c   
* ./c_bin/tmp5468d66c 42 > c_bin/tmp5468d66c.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d66d.s
*  c_obj/tmp5468d66d.o
*  c_bin/tmp5468d66d
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66d.o c_obj/tmp5468d66d.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66d c_obj/tmp5468d66d.o runtime.c   
* ./c_bin/tmp5468d66d 42 > c_bin/tmp5468d66d.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) x = 2; else if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d66e.s
*  c_obj/tmp5468d66e.o
*  c_bin/tmp5468d66e
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66e.o c_obj/tmp5468d66e.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66e c_obj/tmp5468d66e.o runtime.c   
* ./c_bin/tmp5468d66e 42 > c_bin/tmp5468d66e.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) x = 2; else if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d66f.s
*  c_obj/tmp5468d66f.o
*  c_bin/tmp5468d66f
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d66f.o c_obj/tmp5468d66f.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d66f c_obj/tmp5468d66f.o runtime.c   
* ./c_bin/tmp5468d66f 42 > c_bin/tmp5468d66f.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) x = 2; else if (y == 0) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d670.s
*  c_obj/tmp5468d670.o
*  c_bin/tmp5468d670
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d670.o c_obj/tmp5468d670.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d670 c_obj/tmp5468d670.o runtime.c   
* ./c_bin/tmp5468d670 42 > c_bin/tmp5468d670.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d671.s
*  c_obj/tmp5468d671.o
*  c_bin/tmp5468d671
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d671.o c_obj/tmp5468d671.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d671 c_obj/tmp5468d671.o runtime.c   
* ./c_bin/tmp5468d671 42 > c_bin/tmp5468d671.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d672.s
*  c_obj/tmp5468d672.o
*  c_bin/tmp5468d672
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d672.o c_obj/tmp5468d672.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d672 c_obj/tmp5468d672.o runtime.c   
* ./c_bin/tmp5468d672 42 > c_bin/tmp5468d672.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d673.s
*  c_obj/tmp5468d673.o
*  c_bin/tmp5468d673
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d673.o c_obj/tmp5468d673.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d673 c_obj/tmp5468d673.o runtime.c   
* ./c_bin/tmp5468d673 42 > c_bin/tmp5468d673.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2; else if (y == 0) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d674.s
*  c_obj/tmp5468d674.o
*  c_bin/tmp5468d674
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d674.o c_obj/tmp5468d674.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d674 c_obj/tmp5468d674.o runtime.c   
* ./c_bin/tmp5468d674 42 > c_bin/tmp5468d674.out 2>&1
compiling:
int x = 3;
if (x <= 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d675.s
*  c_obj/tmp5468d675.o
*  c_bin/tmp5468d675
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d675.o c_obj/tmp5468d675.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d675 c_obj/tmp5468d675.o runtime.c   
* ./c_bin/tmp5468d675 42 > c_bin/tmp5468d675.out 2>&1
compiling:
int x = 3;
if (x < 100) {
  int x = x + 1;
  if (x > 1) x = x + 1; else x = x - 1;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d676.s
*  c_obj/tmp5468d676.o
*  c_bin/tmp5468d676
compiling:
int x = 3;
if (x < 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else {
  x = x + 3;
  if (x > 1) x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d676.s
*  c_obj/tmp5468d676.o
*  c_bin/tmp5468d676
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d676.o c_obj/tmp5468d676.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d676 c_obj/tmp5468d676.o runtime.c   
* ./c_bin/tmp5468d676 42 > c_bin/tmp5468d676.out 2>&1
compiling:
int x = 3;
if (x < 3) x = x + 1; else {
  x = x - 1;
  if (x > 1) {
    int x = x + 1;
  }
}
return x;
* TMP FILES:
*  c_obj/tmp5468d677.s
*  c_obj/tmp5468d677.o
*  c_bin/tmp5468d677
compiling:
int x = 3;
if (x < 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else x = x * x;
return x;
* TMP FILES:
*  c_obj/tmp5468d677.s
*  c_obj/tmp5468d677.o
*  c_bin/tmp5468d677
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d677.o c_obj/tmp5468d677.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d677 c_obj/tmp5468d677.o runtime.c   
* ./c_bin/tmp5468d677 42 > c_bin/tmp5468d677.out 2>&1
compiling:
int x = 3;
if (x < 2) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else {
  int x = x + 3;
  if (x > 1) x = x | 1;
}
return x;
* TMP FILES:
*  c_obj/tmp5468d678.s
*  c_obj/tmp5468d678.o
*  c_bin/tmp5468d678
compiling:
int x = 6;
int acc = 1;
while (x > 0) {
  acc = acc * x;
  x = x - 1;
}
return acc;
* TMP FILES:
*  c_obj/tmp5468d678.s
*  c_obj/tmp5468d678.o
*  c_bin/tmp5468d678
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d678.o c_obj/tmp5468d678.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d678 c_obj/tmp5468d678.o runtime.c   
* ./c_bin/tmp5468d678 42 > c_bin/tmp5468d678.out 2>&1
compiling:
int x = 1;
while (x < 10) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d679.s
*  c_obj/tmp5468d679.o
*  c_bin/tmp5468d679
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d679.o c_obj/tmp5468d679.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d679 c_obj/tmp5468d679.o runtime.c   
* ./c_bin/tmp5468d679 42 > c_bin/tmp5468d679.out 2>&1
compiling:
int z = 0;
int x = z;
while (z >= 1024 * x) {
  if (x == z) z = -1;
}
return z;
* TMP FILES:
*  c_obj/tmp5468d67a.s
*  c_obj/tmp5468d67a.o
*  c_bin/tmp5468d67a
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67a.o c_obj/tmp5468d67a.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67a c_obj/tmp5468d67a.o runtime.c   
* ./c_bin/tmp5468d67a 42 > c_bin/tmp5468d67a.out 2>&1
compiling:
int x = 19 - 18;
int y = 0;
while (x <= 19) if (y <= 0) x = x + 1; else x = 100;
return x;
* TMP FILES:
*  c_obj/tmp5468d67b.s
*  c_obj/tmp5468d67b.o
*  c_bin/tmp5468d67b
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67b.o c_obj/tmp5468d67b.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67b c_obj/tmp5468d67b.o runtime.c   
* ./c_bin/tmp5468d67b 42 > c_bin/tmp5468d67b.out 2>&1
compiling:
int x = 19 - 18;
int y = 1;
while (x <= 19) if (y <= 0) x = x + 1; else x = 100;
return x;
* TMP FILES:
*  c_obj/tmp5468d67c.s
*  c_obj/tmp5468d67c.o
*  c_bin/tmp5468d67c
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67c.o c_obj/tmp5468d67c.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67c c_obj/tmp5468d67c.o runtime.c   
* ./c_bin/tmp5468d67c 42 > c_bin/tmp5468d67c.out 2>&1
compiling:
int x = 0;
for (int i = 0; i < 100; i = i + 1;) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d67d.s
*  c_obj/tmp5468d67d.o
*  c_bin/tmp5468d67d
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67d.o c_obj/tmp5468d67d.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67d c_obj/tmp5468d67d.o runtime.c   
* ./c_bin/tmp5468d67d 42 > c_bin/tmp5468d67d.out 2>&1
compiling:
int x = 0;
for (int x = 1; 0; ) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp5468d67e.s
*  c_obj/tmp5468d67e.o
*  c_bin/tmp5468d67e
compiling:
int z = 0;
int y = z * z + 98;
for (;
z < 100;
) if (y < 100) z = z + 1; else z = 1000;
return z;
* TMP FILES:
*  c_obj/tmp5468d67e.s
*  c_obj/tmp5468d67e.o
*  c_bin/tmp5468d67e
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67e.o c_obj/tmp5468d67e.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67e c_obj/tmp5468d67e.o runtime.c   
* ./c_bin/tmp5468d67e 42 > c_bin/tmp5468d67e.out 2>&1
compiling:
int z = 0;
int y = z * z + 98 << 40;
for (;
z < 100;
) if (y < 100) z = z + 1; else z = 1000;
return z;
* TMP FILES:
*  c_obj/tmp5468d67f.s
*  c_obj/tmp5468d67f.o
*  c_bin/tmp5468d67f
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d67f.o c_obj/tmp5468d67f.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d67f c_obj/tmp5468d67f.o runtime.c   
* ./c_bin/tmp5468d67f 42 > c_bin/tmp5468d67f.out 2>&1
compiling:
int x = 1;
while (x < 10) if (x < 2) x = 100 | 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d680.s
*  c_obj/tmp5468d680.o
*  c_bin/tmp5468d680
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d680.o c_obj/tmp5468d680.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d680 c_obj/tmp5468d680.o runtime.c   
* ./c_bin/tmp5468d680 42 > c_bin/tmp5468d680.out 2>&1
compiling:
int x = 1 > 0;
for (int abcd = x;
x == abcd;
x = abcd - 1;) if (x == abcd) abcd = 42;
return x;
* TMP FILES:
*  c_obj/tmp5468d681.s
*  c_obj/tmp5468d681.o
*  c_bin/tmp5468d681
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d681.o c_obj/tmp5468d681.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d681 c_obj/tmp5468d681.o runtime.c   
* ./c_bin/tmp5468d681 42 > c_bin/tmp5468d681.out 2>&1
compiling:
int x = 1 > 0;
for (int abcd = x;
x == abcd;
{
  if (x == abcd) abcd = 42;
  x = abcd - 1;
}) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp5468d682.s
*  c_obj/tmp5468d682.o
*  c_bin/tmp5468d682
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d682.o c_obj/tmp5468d682.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d682 c_obj/tmp5468d682.o runtime.c   
* ./c_bin/tmp5468d682 42 > c_bin/tmp5468d682.out 2>&1
compiling:
int x = 0;
int y = 5;
if (x == 0) while (x < 10) if (y == 5) x = x + 1; else x = x + 3;
return x;
* TMP FILES:
*  c_obj/tmp5468d683.s
*  c_obj/tmp5468d683.o
*  c_bin/tmp5468d683
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d683.o c_obj/tmp5468d683.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d683 c_obj/tmp5468d683.o runtime.c   
* ./c_bin/tmp5468d683 42 > c_bin/tmp5468d683.out 2>&1
compiling:
int x = 0;
int y = 5 >> 100;
if (x == 0) while (x < 10) if (y == 5) x = x + 1; else x = x + 3;
return x;
* TMP FILES:
*  c_obj/tmp5468d684.s
*  c_obj/tmp5468d684.o
*  c_bin/tmp5468d684
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d684.o c_obj/tmp5468d684.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d684 c_obj/tmp5468d684.o runtime.c   
* ./c_bin/tmp5468d684 42 > c_bin/tmp5468d684.out 2>&1
compiling:
int x = 0 + 1;
int z = x + 1;
int y = 0;
if (x > 0) for (int i = 0;
i < 100;
i = i + 1;) if (z == x + 1) y = y - 1; else y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp5468d685.s
*  c_obj/tmp5468d685.o
*  c_bin/tmp5468d685
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d685.o c_obj/tmp5468d685.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d685 c_obj/tmp5468d685.o runtime.c   
* ./c_bin/tmp5468d685 42 > c_bin/tmp5468d685.out 2>&1
compiling:
int x = 0 + 1;
int z = x + 1;
int y = 0;
if (x > 0) for (int i = 0;
i < 100;
i = i + 1;) if (z == x - 1) y = y - 1; else y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp5468d686.s
*  c_obj/tmp5468d686.o
*  c_bin/tmp5468d686
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d686.o c_obj/tmp5468d686.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d686 c_obj/tmp5468d686.o runtime.c   
* ./c_bin/tmp5468d686 42 > c_bin/tmp5468d686.out 2>&1
compiling:
int i = 0;
int j = 0;
while (i == j) if (i == 0) while (j <= i) if (j == 0) j = 1;
return j;
* TMP FILES:
*  c_obj/tmp5468d687.s
*  c_obj/tmp5468d687.o
*  c_bin/tmp5468d687
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d687.o c_obj/tmp5468d687.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d687 c_obj/tmp5468d687.o runtime.c   
* ./c_bin/tmp5468d687 42 > c_bin/tmp5468d687.out 2>&1
compiling:
int i = 0;
int j = 0;
for (int x = 0,
int y = 0;
i == j;
) if (i == 0) for (int z = 0,
int u = 0;
j <= i;
) if (j == 0) j = 1;
return j;
* TMP FILES:
*  c_obj/tmp5468d688.s
*  c_obj/tmp5468d688.o
*  c_bin/tmp5468d688
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d688.o c_obj/tmp5468d688.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d688 c_obj/tmp5468d688.o runtime.c   
* ./c_bin/tmp5468d688 42 > c_bin/tmp5468d688.out 2>&1
compiling:
int x = 10;
int y = 0;
while (x <= 40) if (x <= 20) while (x <= 20) if (x > 0) x = x + 1; else 
x = x + 2; else while (x <= 40) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d689.s
*  c_obj/tmp5468d689.o
*  c_bin/tmp5468d689
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d689.o c_obj/tmp5468d689.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d689 c_obj/tmp5468d689.o runtime.c   
* ./c_bin/tmp5468d689 42 > c_bin/tmp5468d689.out 2>&1
compiling:
int x = 31;
int y = 0;
while (x <= 40) if (x <= 20) while (x <= 20) if (x > 0) x = x + 1; else 
x = x + 2; else while (x <= 40) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d68a.s
*  c_obj/tmp5468d68a.o
*  c_bin/tmp5468d68a
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68a.o c_obj/tmp5468d68a.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68a c_obj/tmp5468d68a.o runtime.c   
* ./c_bin/tmp5468d68a 42 > c_bin/tmp5468d68a.out 2>&1
compiling:
int x = 31;
int y = 0;
for (;
x <= 40;
) if (x <= 20) for (;
x <= 20;
) if (x > 0) x = x + 1; else x = x + 2; else for (;
x <= 40;
) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d68b.s
*  c_obj/tmp5468d68b.o
*  c_bin/tmp5468d68b
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68b.o c_obj/tmp5468d68b.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68b c_obj/tmp5468d68b.o runtime.c   
* ./c_bin/tmp5468d68b 42 > c_bin/tmp5468d68b.out 2>&1
compiling:
int x = 1;
int y = 0;
for (;
x <= 40;
) if (x <= 20) for (;
x <= 20;
) if (x > 0) x = x + 1; else x = x + 2; else for (;
x <= 40;
) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp5468d68c.s
*  c_obj/tmp5468d68c.o
*  c_bin/tmp5468d68c
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68c.o c_obj/tmp5468d68c.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68c c_obj/tmp5468d68c.o runtime.c   
* ./c_bin/tmp5468d68c 42 > c_bin/tmp5468d68c.out 2>&1
compiling:
int x = 0;
int y = 0;
if (x * x * x * x * x * x * x * x * x * x != 0) x = 1;
y = 1;
return x + y;
* TMP FILES:
*  c_obj/tmp5468d68d.s
*  c_obj/tmp5468d68d.o
*  c_bin/tmp5468d68d
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68d.o c_obj/tmp5468d68d.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68d c_obj/tmp5468d68d.o runtime.c   
* ./c_bin/tmp5468d68d 42 > c_bin/tmp5468d68d.out 2>&1
compiling:
int x = 0;
int y = 0;
if (x * x * x * x * x * x * x * x * x * x == 0 * 0 * 0 * 0 * 0 * 0) x = 1;
y = 1;
return x + y;
* TMP FILES:
*  c_obj/tmp5468d68e.s
*  c_obj/tmp5468d68e.o
*  c_bin/tmp5468d68e
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68e.o c_obj/tmp5468d68e.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68e c_obj/tmp5468d68e.o runtime.c   
* ./c_bin/tmp5468d68e 42 > c_bin/tmp5468d68e.out 2>&1
compiling:
int x = 0;
int y = 0;
while (x < 10) x = x + 1; y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp5468d68f.s
*  c_obj/tmp5468d68f.o
*  c_bin/tmp5468d68f
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d68f.o c_obj/tmp5468d68f.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d68f c_obj/tmp5468d68f.o runtime.c   
* ./c_bin/tmp5468d68f 42 > c_bin/tmp5468d68f.out 2>&1
compiling:
int x = 0;
int y = 0;
for (;
x < 10;
{
  y = y + 1;
}) x = x + 1;
y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp5468d690.s
*  c_obj/tmp5468d690.o
*  c_bin/tmp5468d690
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d690.o c_obj/tmp5468d690.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d690 c_obj/tmp5468d690.o runtime.c   
* ./c_bin/tmp5468d690 42 > c_bin/tmp5468d690.out 2>&1
compiling:
int x = 0;
for (int i = 0;
i < 100;
i = i + 1;) {
  x = x + 1;
}
x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d691.s
*  c_obj/tmp5468d691.o
*  c_bin/tmp5468d691
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d691.o c_obj/tmp5468d691.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d691 c_obj/tmp5468d691.o runtime.c   
* ./c_bin/tmp5468d691 42 > c_bin/tmp5468d691.out 2>&1
compiling:
int x = 0;
while (x < 100) {
  x = x + 1;
} x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d692.s
*  c_obj/tmp5468d692.o
*  c_bin/tmp5468d692
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d692.o c_obj/tmp5468d692.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d692 c_obj/tmp5468d692.o runtime.c   
* ./c_bin/tmp5468d692 42 > c_bin/tmp5468d692.out 2>&1
compiling:
int x = 0;
if (x < 100) {
  x = x + 1;
} x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp5468d693.s
*  c_obj/tmp5468d693.o
*  c_bin/tmp5468d693
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d693.o c_obj/tmp5468d693.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d693 c_obj/tmp5468d693.o runtime.c   
* ./c_bin/tmp5468d693 42 > c_bin/tmp5468d693.out 2>&1
compiling:
int a = 0;
int i = 0;
while (i < 100) {
  i = i + 1;
  i = i + a;
}
for (int j = 0;
j < i;
j = j + 50;) {
  i = i + 1;
  a = a + 1000;
}
if (a > 0) {
  int i = 100;
  i = i + 1;
  i = i + 1;
} else {
  i = a + i;
  a = 100;
}
i = i + 1;
return i + a;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
compiling:
int a = 0;
int i = 0;
i = i + 1;
if (a > 0) {
  int i = 100;
  i = i + 1;
  i = i + 1;
} else {
  i = a + i;
  a = 100;
}
while (i < 100) {
  i = i + 1;
  i = i + a;
}
for (int j = 0;
j < i;
j = j + 50;) {
  i = i + 1;
  a = a + 1000;
}
return i + a * 3 >> 2 << 4;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
compiling:
int x1 = 0;
int y1 = x1;
{
  int x2 = -1;
  int y2 = y1;
  {
    int x3 = 2;
    int y3 = y2;
    {
      int x4 = 3;
      int y4 = y3;
      {
        int x2 = 1;
        y1 = x1 + x2 + x3 + x4 + y4;
      }
    }
  }
}
return y1;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
compiling:
int x1 = 0;
int y1 = x1;
for (;
y1 < 10;
{
  int x2 = -1;
  int y2 = y1;
  {
    int x3 = 2;
    int y3 = y2;
    {
      int x4 = 3;
      int y4 = y3;
      {
        int x2 = 1;
        y1 = x1 * x2 * x3 + x4 << y4;
      }
    }
  }
}) {
  
}
return y1;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
compiling:
int x1 = 0;
int y = 0;
{
  int y1 = x1;
  {
    int x1 = 9;
    y = y + x1;
  }
  y = y + x1;
  {
    int z2 = y;
    int y1 = 100;
    y = y + y1;
    {
      int y = z2;
      int x1 = 100;
      y = x1 + z2;
    }
    y = y + z2;
  }
  y = y + y1 + x1;
  {
    int w = y + 94;
    y = w + 94;
    y = x1 + y + y1;
  }
}
return y;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
compiling:
{
  {
    {
      {
        {
          {
            {
              {
                {
                  {
                    {
                      {
                        {
                          {
                            {
                              {
                                {
                                  {
                                    
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
return 0;
* TMP FILES:
*  c_obj/tmp5468d694.s
*  c_obj/tmp5468d694.o
*  c_bin/tmp5468d694
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d694.o c_obj/tmp5468d694.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d694 c_obj/tmp5468d694.o runtime.c   
* ./c_bin/tmp5468d694 42 > c_bin/tmp5468d694.out 2>&1
compiling:
int x = 1;
int y = x;
{
  int x = 2;
  int y = x;
  {
    int x = 4;
    int y = x;
    {
      int x = 6;
      int y = x;
      {
        int x = 8;
        int y = x;
        {
          int x = 3;
          int y = x;
          {
            int x = 5;
            int y = x;
            {
              int x = 7;
              int y = x;
              {
                int x = 9;
                int y = x;
              }
            }
          }
        }
      }
    }
  }
}
return y;
* TMP FILES:
*  c_obj/tmp5468d695.s
*  c_obj/tmp5468d695.o
*  c_bin/tmp5468d695
compiling:
int i = 0;
while (i < 100) {
  int j = 0;
  i = i + 10;
  for (;
  j < 100;
  ) {
    int k = j;
    while (k > -900) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        for (int y = 0;
        y < x;
        y = y + 5;) {
          
        }
      } else {
        int w = 100;
        while (w > -100) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }
}
return i;
* TMP FILES:
*  c_obj/tmp5468d695.s
*  c_obj/tmp5468d695.o
*  c_bin/tmp5468d695
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d695.o c_obj/tmp5468d695.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d695 c_obj/tmp5468d695.o runtime.c   
* ./c_bin/tmp5468d695 42 > c_bin/tmp5468d695.out 2>&1
compiling:
int i = 0;
for (;
i < 100;
) {
  int j = 0;
  i = i + 10;
  while (j < 100) {
    int k = j;
    for (;
    k > -900;
    ) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        int y = 0;
        while (y < x) {
          y = y + 5;
        }
      } else {
        int w = 100;
        for (;
        w > -100;
        ) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }
}
return i;
* TMP FILES:
*  c_obj/tmp5468d696.s
*  c_obj/tmp5468d696.o
*  c_bin/tmp5468d696
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d696.o c_obj/tmp5468d696.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d696 c_obj/tmp5468d696.o runtime.c   
* ./c_bin/tmp5468d696 42 > c_bin/tmp5468d696.out 2>&1
compiling:
int i = 0;
while (i < 100) {
  int j = 0;
  i = i + 10;
  for (;
  j < 100;
  {
    int k = j;
    while (k > -900) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        for (int y = 0;
        y < x;
        y = y + 5;) {
          
        }
      } else {
        int w = 100;
        while (w > -100) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }) {
    
  }
}
return i;
* TMP FILES:
*  c_obj/tmp5468d697.s
*  c_obj/tmp5468d697.o
*  c_bin/tmp5468d697
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d697.o c_obj/tmp5468d697.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d697 c_obj/tmp5468d697.o runtime.c   
* ./c_bin/tmp5468d697 42 > c_bin/tmp5468d697.out 2>&1
compiling:
int x = 1;
if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (
x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (
x == 1) if (x == 1) if (x == 1) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp5468d698.s
*  c_obj/tmp5468d698.o
*  c_bin/tmp5468d698
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d698.o c_obj/tmp5468d698.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d698 c_obj/tmp5468d698.o runtime.c   
* ./c_bin/tmp5468d698 42 > c_bin/tmp5468d698.out 2>&1
compiling:
int ARRAY_SIZE = 7;
int x = 0;
int y = 0;
int holder = 0;
int iarray = 0;
int mask = 15;
int correct = 1;
int lastone = -1;
iarray = (iarray & ~mask) + 1;
iarray = (iarray & ~(mask << 4)) + (6 << 4);
iarray = (iarray & ~(mask << 8)) + (9 << 8);
iarray = (iarray & ~(mask << 12)) + (7 << 12);
iarray = (iarray & ~(mask << 16)) + (0 << 16);
iarray = (iarray & ~(mask << 20)) + (4 << 20);
iarray = (iarray & ~(mask << 24)) + (5 << 24);
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) for (int y = 0;
y < ARRAY_SIZE - 1;
y = y + 1;) {
  int a = (iarray & mask << 4 * y) >> 4 * y;
  int b = (iarray & mask << 4 * (y + 1)) >> 4 * (y + 1);
  if (a > b) {
    int holder = b;
    iarray = (iarray & ~(mask << 4 * (y + 1))) + (a << 4 * (y + 1));
    iarray = (iarray & ~(mask << 4 * y)) + (holder << 4 * y);
  }
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (iarray & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp5468d699.s
*  c_obj/tmp5468d699.o
*  c_bin/tmp5468d699
compiling:
int ARRAY_SIZE = 7;
int arr = 0;
int temp = 0;
int i = 0;
int j = 0;
int k = 0;
int n = ARRAY_SIZE;
int size = 0;
int l1 = 0;
int h1 = 0;
int l2 = 0;
int h2 = 0;
int mask = 15;
int correct = 1;
int lastone = -1;
arr = (arr & ~mask) + 1;
arr = (arr & ~(mask << 4)) + (6 << 4);
arr = (arr & ~(mask << 8)) + (9 << 8);
arr = (arr & ~(mask << 12)) + (7 << 12);
arr = (arr & ~(mask << 16)) + (0 << 16);
arr = (arr & ~(mask << 20)) + (4 << 20);
arr = (arr & ~(mask << 24)) + (5 << 24);
size = 1;
for (;
size < n;
size = size * 2;) {
  l1 = 0;
  k = 0;
  while (l1 + size < n) {
    h1 = l1 + size - 1;
    l2 = h1 + 1;
    h2 = l2 + size - 1;
    if (h2 >= n) h2 = n - 1;
    i = l1;
    j = l2;
    while (i <= h1 & j <= h2) {
      int ai = (arr & mask << 4 * i) >> 4 * i;
      int aj = (arr & mask << 4 * j) >> 4 * j;
      if (ai <= aj) {
        temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
        k = k + 1;
        i = i + 1;
      } else {
        temp = (temp & ~(mask << 4 * k)) + (aj << 4 * k);
        k = k + 1;
        j = j + 1;
      }
    }
    while (i <= h1) {
      int ai = (arr & mask << 4 * i) >> 4 * i;
      temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
      k = k + 1;
      i = i + 1;
    }
    while (j <= h2) {
      int aj = (arr & mask << 4 * j) >> 4 * j;
      temp = (temp & ~(mask << 4 * k)) + (aj << 4 * k);
      k = k + 1;
      j = j + 1;
    }
    l1 = h2 + 1;
  }
  i = l1;
  for (;
  k < n;
  i = i + 1;) {
    int ai = (arr & mask << 4 * i) >> 4 * i;
    temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
    k = k + 1;
  }
  i = 0;
  for (;
  i < n;
  i = i + 1;) {
    int tempi = (temp & mask << 4 * i) >> 4 * i;
    arr = (arr & ~(mask << 4 * i)) + (tempi << 4 * i);
  }
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (arr & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp5468d699.s
*  c_obj/tmp5468d699.o
*  c_bin/tmp5468d699
* gcc -mstackrealign -c -m32 -o c_obj/tmp5468d699.o c_obj/tmp5468d699.s
* gcc -mstackrealign -m32 -o c_bin/tmp5468d699 c_obj/tmp5468d699.o runtime.c   
* ./c_bin/tmp5468d699 42 > c_bin/tmp5468d699.out 2>&1
compiling:
int arr = 0;
int ARRAY_SIZE = 7;
int mask = 15;
int correct = 1;
int lastone = -1;
arr = (arr & ~mask) + 1;
arr = (arr & ~(mask << 4)) + (6 << 4);
arr = (arr & ~(mask << 8)) + (9 << 8);
arr = (arr & ~(mask << 12)) + (7 << 12);
arr = (arr & ~(mask << 16)) + (0 << 16);
arr = (arr & ~(mask << 20)) + (4 << 20);
arr = (arr & ~(mask << 24)) + (5 << 24);
{
  int numbers = arr;
  int array_size = ARRAY_SIZE;
  int i = 0;
  int temp = 0;
  int mask = 15;
  i = array_size >> 1;
  for (;
  i >= 0;
  i = i - 1;) {
    int root = i;
    int bottom = array_size - 1;
    int done = 0;
    int maxChild = 0;
    int temp = 0;
    int n1 = 0;
    int n2 = 0;
    done = 0;
    while (root * 2 <= bottom & !done) {
      if (root * 2 == bottom) maxChild = root * 2; else if ((numbers &
                                                             mask <<
                                                             4 * root * 2)
                                                            >> 4 * root * 2 >
                                                            (numbers &
                                                             mask <<
                                                             4 *
                                                             (root * 2 + 1))
                                                            >>
                                                            4 *
                                                            (root * 2 + 1)) 
      maxChild = root * 2; else maxChild = root * 2 + 1;
      n1 = (numbers & mask << 4 * root) >> 4 * root;
      n2 = (numbers & mask << 4 * maxChild) >> 4 * maxChild;
      if (n1 < n2) {
        temp = n1;
        numbers = (numbers & ~(mask << 4 * root)) + (n2 << 4 * root);
        numbers =
        (numbers & ~(mask << 4 * maxChild)) + (temp << 4 * maxChild);
        root = maxChild;
      } else done = 1;
    }
  }
  i = array_size - 1;
  for (;
  i >= 1;
  i = i - 1;) {
    int root = 0;
    int bottom = i - 1;
    int done = 0;
    int maxChild = 0;
    int temp = 0;
    int n1 = 0;
    int n2 = 0;
    temp = numbers & mask;
    numbers = (numbers & ~mask) + ((numbers & mask << 4 * i) >> 4 * i);
    numbers = (numbers & ~(mask << 4 * i)) + (temp << 4 * i);
    done = 0;
    while (root * 2 <= bottom & !done) {
      if (root * 2 == bottom) maxChild = root * 2; else if ((numbers &
                                                             mask <<
                                                             4 * root * 2)
                                                            >> 4 * root * 2 >
                                                            (numbers &
                                                             mask <<
                                                             4 *
                                                             (root * 2 + 1))
                                                            >>
                                                            4 *
                                                            (root * 2 + 1)) 
      maxChild = root * 2; else maxChild = root * 2 + 1;
      n1 = (numbers & mask << 4 * root) >> 4 * root;
      n2 = (numbers & mask << 4 * maxChild) >> 4 * maxChild;
      if (n1 < n2) {
        temp = n1;
        numbers = (numbers & ~(mask << 4 * root)) + (n2 << 4 * root);
        numbers =
        (numbers & ~(mask << 4 * maxChild)) + (temp << 4 * maxChild);
        root = maxChild;
      } else done = 1;
    }
  }
  arr = numbers;
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (arr & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp5468d69a.s
*  c_obj/tmp5468d69a.o
*  c_bin/tmp5468d69a

Easy Parse Tests (20/20 points):
  OK
Medium Parse Tests (10/10 points):
  OK
Parse Error Tests (10/10 points):
  OK
Scope tests (5/5 points):
  OK
Easy tests (9/15 points)
  test1: passed
  test2: passed
  test3: passed
  test4: failed - Program output 4 expected 3
  test5: passed
  test6: failed - Program output 4 expected 3
  test7: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  test8: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  test9: passed
  test10: failed - Program output 1 expected 0
  test12: passed
  easy_um1: passed
  easy_uu1: passed
  easy_uu2: failed - Program output 1 expected 0
  easy_uu3: failed - Program output 1 expected 0
  easy_mu1: passed
  easy_mu2: passed
  easy_mu3: failed - Program output 1 expected 0
  easy_mm1: passed
  easy_mm2: passed
  easy_mm3: passed
  easy_mm4: passed
  easy_ub1: passed
  easy_ub2: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  easy_mb1: passed
  easy_mb2: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  easy_mb3: passed
  easy_mb4: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
Medium tests (7/10 points)
  test11: passed
  medium_mw1: passed
  medium_mw3: failed - Program output 0 expected -1
  medium_mw4: passed
  medium_mw5: passed
  medium_mf1: passed
  medium_mf2: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_mf3: failed - Program output 1000 expected 100
  medium_mf4: passed
  medium_uw1: passed
  medium_uf1: failed - Program output 0 expected 41
  medium_uf2: passed
  medium_uimw1: passed
  medium_uimw2: passed
  medium_uimf1: failed - Program output 100 expected -100
  medium_uimf2: passed
  medium_uwmw1: passed
  medium_ufmf1: passed
  medium_mwmw1: passed
  medium_mwmw2: passed
  medium_mfmf1: passed
  medium_mfmf2: passed
  medium_seq1: failed - Program output 2 expected 1
  medium_seq2: passed
  medium_seq3: passed
  medium_seq4: passed
  medium_seq5: passed
  medium_seq6: passed
  medium_seq7: passed
  medium_seq8: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_seq9: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_ctx1: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_ctx2: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_ctx3: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_ctx4: passed
  medium_ctx5: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  medium_nest1: passed
  medium_nest2: passed
  medium_nest3: passed
  medium_nest4: passed
Hard tests (0/10 points)
  bsort: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
  msort: failed - Program output 0 expected 1
  hsort: failed - test threw an unknown exception: Platform.AsmLinkError("llc -march x86 -O0 - -o -", "Stopped with 1.")
Stress tests (hidden) (??/10 points):
  Hidden
StyleManual (??/10 points):
  Hidden
---------------------------------------------------
Passed: 98/124
Failed: 26/124
Score: 61/80 (given)
       ??/20 (hidden)

