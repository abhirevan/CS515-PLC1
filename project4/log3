Configuring platform...
[Linux]
compiling:

return 4;
* TMP FILES:
*  c_obj/tmp54690d97.s
*  c_obj/tmp54690d97.o
*  c_bin/tmp54690d97
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d97.o c_obj/tmp54690d97.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d97 c_obj/tmp54690d97.o runtime.c   
* ./c_bin/tmp54690d97 42 > c_bin/tmp54690d97.out 2>&1
compiling:
int x = 3;
return x;
* TMP FILES:
*  c_obj/tmp54690d98.s
*  c_obj/tmp54690d98.o
*  c_bin/tmp54690d98
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d98.o c_obj/tmp54690d98.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d98 c_obj/tmp54690d98.o runtime.c   
* ./c_bin/tmp54690d98 42 > c_bin/tmp54690d98.out 2>&1
compiling:
int x = 3;
int y = 4;
return x + y;
* TMP FILES:
*  c_obj/tmp54690d99.s
*  c_obj/tmp54690d99.o
*  c_bin/tmp54690d99
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d99.o c_obj/tmp54690d99.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d99 c_obj/tmp54690d99.o runtime.c   
* ./c_bin/tmp54690d99 42 > c_bin/tmp54690d99.out 2>&1
compiling:
int x = 3;
if (x == 0) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690d9a.s
*  c_obj/tmp54690d9a.o
*  c_bin/tmp54690d9a
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9a.o c_obj/tmp54690d9a.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9a c_obj/tmp54690d9a.o runtime.c   
* ./c_bin/tmp54690d9a 42 > c_bin/tmp54690d9a.out 2>&1
compiling:
int x = 3;
if (x == 3) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690d9b.s
*  c_obj/tmp54690d9b.o
*  c_bin/tmp54690d9b
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9b.o c_obj/tmp54690d9b.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9b c_obj/tmp54690d9b.o runtime.c   
* ./c_bin/tmp54690d9b 42 > c_bin/tmp54690d9b.out 2>&1
compiling:
int x = 3;
if (x == 0) {
  x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp54690d9c.s
*  c_obj/tmp54690d9c.o
*  c_bin/tmp54690d9c
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9c.o c_obj/tmp54690d9c.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9c c_obj/tmp54690d9c.o runtime.c   
* ./c_bin/tmp54690d9c 42 > c_bin/tmp54690d9c.out 2>&1
compiling:
int x = 1;
{
  int x = 2;
}
return x;
* TMP FILES:
*  c_obj/tmp54690d9d.s
*  c_obj/tmp54690d9d.o
*  c_bin/tmp54690d9d
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9d.o c_obj/tmp54690d9d.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9d c_obj/tmp54690d9d.o runtime.c   
* ./c_bin/tmp54690d9d 42 > c_bin/tmp54690d9d.out 2>&1
compiling:
int x = 1;
int y = 0;
{
  int x = 4;
  y = y + x;
} y = y + x;
return y;
* TMP FILES:
*  c_obj/tmp54690d9e.s
*  c_obj/tmp54690d9e.o
*  c_bin/tmp54690d9e
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9e.o c_obj/tmp54690d9e.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9e c_obj/tmp54690d9e.o runtime.c   
* ./c_bin/tmp54690d9e 42 > c_bin/tmp54690d9e.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp54690d9f.s
*  c_obj/tmp54690d9f.o
*  c_bin/tmp54690d9f
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690d9f.o c_obj/tmp54690d9f.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690d9f c_obj/tmp54690d9f.o runtime.c   
* ./c_bin/tmp54690d9f 42 > c_bin/tmp54690d9f.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp54690da0.s
*  c_obj/tmp54690da0.o
*  c_bin/tmp54690da0
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da0.o c_obj/tmp54690da0.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da0 c_obj/tmp54690da0.o runtime.c   
* ./c_bin/tmp54690da0 42 > c_bin/tmp54690da0.out 2>&1
compiling:
int x = 3 + 4;
int y = 17 * 5;
int z = 0;
if (x == y) z = 3; else z = 4;
return z;
* TMP FILES:
*  c_obj/tmp54690da1.s
*  c_obj/tmp54690da1.o
*  c_bin/tmp54690da1
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da1.o c_obj/tmp54690da1.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da1 c_obj/tmp54690da1.o runtime.c   
* ./c_bin/tmp54690da1 42 > c_bin/tmp54690da1.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1; else x = 2;
return x;
* TMP FILES:
*  c_obj/tmp54690da2.s
*  c_obj/tmp54690da2.o
*  c_bin/tmp54690da2
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da2.o c_obj/tmp54690da2.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da2 c_obj/tmp54690da2.o runtime.c   
* ./c_bin/tmp54690da2 42 > c_bin/tmp54690da2.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da3.s
*  c_obj/tmp54690da3.o
*  c_bin/tmp54690da3
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da3.o c_obj/tmp54690da3.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da3 c_obj/tmp54690da3.o runtime.c   
* ./c_bin/tmp54690da3 42 > c_bin/tmp54690da3.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da4.s
*  c_obj/tmp54690da4.o
*  c_bin/tmp54690da4
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da4.o c_obj/tmp54690da4.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da4 c_obj/tmp54690da4.o runtime.c   
* ./c_bin/tmp54690da4 42 > c_bin/tmp54690da4.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da5.s
*  c_obj/tmp54690da5.o
*  c_bin/tmp54690da5
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da5.o c_obj/tmp54690da5.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da5 c_obj/tmp54690da5.o runtime.c   
* ./c_bin/tmp54690da5 42 > c_bin/tmp54690da5.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) x = 2; else if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da6.s
*  c_obj/tmp54690da6.o
*  c_bin/tmp54690da6
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da6.o c_obj/tmp54690da6.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da6 c_obj/tmp54690da6.o runtime.c   
* ./c_bin/tmp54690da6 42 > c_bin/tmp54690da6.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) x = 2; else if (y == 1) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da7.s
*  c_obj/tmp54690da7.o
*  c_bin/tmp54690da7
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da7.o c_obj/tmp54690da7.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da7 c_obj/tmp54690da7.o runtime.c   
* ./c_bin/tmp54690da7 42 > c_bin/tmp54690da7.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) x = 2; else if (y == 0) x = 1;
return x;
* TMP FILES:
*  c_obj/tmp54690da8.s
*  c_obj/tmp54690da8.o
*  c_bin/tmp54690da8
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da8.o c_obj/tmp54690da8.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da8 c_obj/tmp54690da8.o runtime.c   
* ./c_bin/tmp54690da8 42 > c_bin/tmp54690da8.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp54690da9.s
*  c_obj/tmp54690da9.o
*  c_bin/tmp54690da9
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690da9.o c_obj/tmp54690da9.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690da9 c_obj/tmp54690da9.o runtime.c   
* ./c_bin/tmp54690da9 42 > c_bin/tmp54690da9.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 1) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp54690daa.s
*  c_obj/tmp54690daa.o
*  c_bin/tmp54690daa
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690daa.o c_obj/tmp54690daa.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690daa c_obj/tmp54690daa.o runtime.c   
* ./c_bin/tmp54690daa 42 > c_bin/tmp54690daa.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 0) if (y == 0) x = 1; else x = 2; else if (y == 1) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dab.s
*  c_obj/tmp54690dab.o
*  c_bin/tmp54690dab
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dab.o c_obj/tmp54690dab.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dab c_obj/tmp54690dab.o runtime.c   
* ./c_bin/tmp54690dab 42 > c_bin/tmp54690dab.out 2>&1
compiling:
int x = 0;
int y = 1;
if (x == 1) if (y == 1) x = 1; else x = 2; else if (y == 0) x = 3; else 
x = 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dac.s
*  c_obj/tmp54690dac.o
*  c_bin/tmp54690dac
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dac.o c_obj/tmp54690dac.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dac c_obj/tmp54690dac.o runtime.c   
* ./c_bin/tmp54690dac 42 > c_bin/tmp54690dac.out 2>&1
compiling:
int x = 3;
if (x <= 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp54690dad.s
*  c_obj/tmp54690dad.o
*  c_bin/tmp54690dad
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dad.o c_obj/tmp54690dad.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dad c_obj/tmp54690dad.o runtime.c   
* ./c_bin/tmp54690dad 42 > c_bin/tmp54690dad.out 2>&1
compiling:
int x = 3;
if (x < 100) {
  int x = x + 1;
  if (x > 1) x = x + 1; else x = x - 1;
}
return x;
* TMP FILES:
*  c_obj/tmp54690dae.s
*  c_obj/tmp54690dae.o
*  c_bin/tmp54690dae
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dae.o c_obj/tmp54690dae.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dae c_obj/tmp54690dae.o runtime.c   
* ./c_bin/tmp54690dae 42 > c_bin/tmp54690dae.out 2>&1
compiling:
int x = 3;
if (x < 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else {
  x = x + 3;
  if (x > 1) x = x + 1;
}
return x;
* TMP FILES:
*  c_obj/tmp54690daf.s
*  c_obj/tmp54690daf.o
*  c_bin/tmp54690daf
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690daf.o c_obj/tmp54690daf.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690daf c_obj/tmp54690daf.o runtime.c   
* ./c_bin/tmp54690daf 42 > c_bin/tmp54690daf.out 2>&1
compiling:
int x = 3;
if (x < 3) x = x + 1; else {
  x = x - 1;
  if (x > 1) {
    int x = x + 1;
  }
}
return x;
* TMP FILES:
*  c_obj/tmp54690db0.s
*  c_obj/tmp54690db0.o
*  c_bin/tmp54690db0
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db0.o c_obj/tmp54690db0.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db0 c_obj/tmp54690db0.o runtime.c   
* ./c_bin/tmp54690db0 42 > c_bin/tmp54690db0.out 2>&1
compiling:
int x = 3;
if (x < 3) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else x = x * x;
return x;
* TMP FILES:
*  c_obj/tmp54690db1.s
*  c_obj/tmp54690db1.o
*  c_bin/tmp54690db1
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db1.o c_obj/tmp54690db1.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db1 c_obj/tmp54690db1.o runtime.c   
* ./c_bin/tmp54690db1 42 > c_bin/tmp54690db1.out 2>&1
compiling:
int x = 3;
if (x < 2) {
  x = x + 1;
  if (x > 1) x = x + 1;
} else {
  int x = x + 3;
  if (x > 1) x = x | 1;
}
return x;
* TMP FILES:
*  c_obj/tmp54690db2.s
*  c_obj/tmp54690db2.o
*  c_bin/tmp54690db2
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db2.o c_obj/tmp54690db2.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db2 c_obj/tmp54690db2.o runtime.c   
* ./c_bin/tmp54690db2 42 > c_bin/tmp54690db2.out 2>&1
compiling:
int x = 6;
int acc = 1;
while (x > 0) {
  acc = acc * x;
  x = x - 1;
}
return acc;
* TMP FILES:
*  c_obj/tmp54690db3.s
*  c_obj/tmp54690db3.o
*  c_bin/tmp54690db3
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db3.o c_obj/tmp54690db3.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db3 c_obj/tmp54690db3.o runtime.c   
* ./c_bin/tmp54690db3 42 > c_bin/tmp54690db3.out 2>&1
compiling:
int x = 1;
while (x < 10) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690db4.s
*  c_obj/tmp54690db4.o
*  c_bin/tmp54690db4
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db4.o c_obj/tmp54690db4.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db4 c_obj/tmp54690db4.o runtime.c   
* ./c_bin/tmp54690db4 42 > c_bin/tmp54690db4.out 2>&1
compiling:
int z = 0;
int x = z;
while (z >= 1024 * x) {
  if (x == z) z = -1;
}
return z;
* TMP FILES:
*  c_obj/tmp54690db5.s
*  c_obj/tmp54690db5.o
*  c_bin/tmp54690db5
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db5.o c_obj/tmp54690db5.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db5 c_obj/tmp54690db5.o runtime.c   
* ./c_bin/tmp54690db5 42 > c_bin/tmp54690db5.out 2>&1
compiling:
int x = 19 - 18;
int y = 0;
while (x <= 19) if (y <= 0) x = x + 1; else x = 100;
return x;
* TMP FILES:
*  c_obj/tmp54690db6.s
*  c_obj/tmp54690db6.o
*  c_bin/tmp54690db6
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db6.o c_obj/tmp54690db6.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db6 c_obj/tmp54690db6.o runtime.c   
* ./c_bin/tmp54690db6 42 > c_bin/tmp54690db6.out 2>&1
compiling:
int x = 19 - 18;
int y = 1;
while (x <= 19) if (y <= 0) x = x + 1; else x = 100;
return x;
* TMP FILES:
*  c_obj/tmp54690db7.s
*  c_obj/tmp54690db7.o
*  c_bin/tmp54690db7
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db7.o c_obj/tmp54690db7.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db7 c_obj/tmp54690db7.o runtime.c   
* ./c_bin/tmp54690db7 42 > c_bin/tmp54690db7.out 2>&1
compiling:
int x = 0;
for (int i = 0; i < 100; i = i + 1;) x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690db8.s
*  c_obj/tmp54690db8.o
*  c_bin/tmp54690db8
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db8.o c_obj/tmp54690db8.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db8 c_obj/tmp54690db8.o runtime.c   
* ./c_bin/tmp54690db8 42 > c_bin/tmp54690db8.out 2>&1
compiling:
int x = 0;
for (int x = 1; 0; ) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp54690db9.s
*  c_obj/tmp54690db9.o
*  c_bin/tmp54690db9
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690db9.o c_obj/tmp54690db9.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690db9 c_obj/tmp54690db9.o runtime.c   
* ./c_bin/tmp54690db9 42 > c_bin/tmp54690db9.out 2>&1
compiling:
int z = 0;
int y = z * z + 98;
for (;
z < 100;
) if (y < 100) z = z + 1; else z = 1000;
return z;
* TMP FILES:
*  c_obj/tmp54690dba.s
*  c_obj/tmp54690dba.o
*  c_bin/tmp54690dba
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dba.o c_obj/tmp54690dba.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dba c_obj/tmp54690dba.o runtime.c   
* ./c_bin/tmp54690dba 42 > c_bin/tmp54690dba.out 2>&1
compiling:
int z = 0;
int y = z * z + 98 << 40;
for (;
z < 100;
) if (y < 100) z = z + 1; else z = 1000;
return z;
* TMP FILES:
*  c_obj/tmp54690dbb.s
*  c_obj/tmp54690dbb.o
*  c_bin/tmp54690dbb
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dbb.o c_obj/tmp54690dbb.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dbb c_obj/tmp54690dbb.o runtime.c   
* ./c_bin/tmp54690dbb 42 > c_bin/tmp54690dbb.out 2>&1
compiling:
int x = 1;
while (x < 10) if (x < 2) x = 100 | 1;
return x;
* TMP FILES:
*  c_obj/tmp54690dbc.s
*  c_obj/tmp54690dbc.o
*  c_bin/tmp54690dbc
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dbc.o c_obj/tmp54690dbc.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dbc c_obj/tmp54690dbc.o runtime.c   
* ./c_bin/tmp54690dbc 42 > c_bin/tmp54690dbc.out 2>&1
compiling:
int x = 1 > 0;
for (int abcd = x;
x == abcd;
x = abcd - 1;) if (x == abcd) abcd = 42;
return x;
* TMP FILES:
*  c_obj/tmp54690dbd.s
*  c_obj/tmp54690dbd.o
*  c_bin/tmp54690dbd
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dbd.o c_obj/tmp54690dbd.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dbd c_obj/tmp54690dbd.o runtime.c   
* ./c_bin/tmp54690dbd 42 > c_bin/tmp54690dbd.out 2>&1
compiling:
int x = 1 > 0;
for (int abcd = x;
x == abcd;
{
  if (x == abcd) abcd = 42;
  x = abcd - 1;
}) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp54690dbe.s
*  c_obj/tmp54690dbe.o
*  c_bin/tmp54690dbe
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dbe.o c_obj/tmp54690dbe.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dbe c_obj/tmp54690dbe.o runtime.c   
* ./c_bin/tmp54690dbe 42 > c_bin/tmp54690dbe.out 2>&1
compiling:
int x = 0;
int y = 5;
if (x == 0) while (x < 10) if (y == 5) x = x + 1; else x = x + 3;
return x;
* TMP FILES:
*  c_obj/tmp54690dbf.s
*  c_obj/tmp54690dbf.o
*  c_bin/tmp54690dbf
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dbf.o c_obj/tmp54690dbf.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dbf c_obj/tmp54690dbf.o runtime.c   
* ./c_bin/tmp54690dbf 42 > c_bin/tmp54690dbf.out 2>&1
compiling:
int x = 0;
int y = 5 >> 100;
if (x == 0) while (x < 10) if (y == 5) x = x + 1; else x = x + 3;
return x;
* TMP FILES:
*  c_obj/tmp54690dc0.s
*  c_obj/tmp54690dc0.o
*  c_bin/tmp54690dc0
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc0.o c_obj/tmp54690dc0.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc0 c_obj/tmp54690dc0.o runtime.c   
* ./c_bin/tmp54690dc0 42 > c_bin/tmp54690dc0.out 2>&1
compiling:
int x = 0 + 1;
int z = x + 1;
int y = 0;
if (x > 0) for (int i = 0;
i < 100;
i = i + 1;) if (z == x + 1) y = y - 1; else y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp54690dc1.s
*  c_obj/tmp54690dc1.o
*  c_bin/tmp54690dc1
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc1.o c_obj/tmp54690dc1.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc1 c_obj/tmp54690dc1.o runtime.c   
* ./c_bin/tmp54690dc1 42 > c_bin/tmp54690dc1.out 2>&1
compiling:
int x = 0 + 1;
int z = x + 1;
int y = 0;
if (x > 0) for (int i = 0;
i < 100;
i = i + 1;) if (z == x - 1) y = y - 1; else y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp54690dc2.s
*  c_obj/tmp54690dc2.o
*  c_bin/tmp54690dc2
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc2.o c_obj/tmp54690dc2.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc2 c_obj/tmp54690dc2.o runtime.c   
* ./c_bin/tmp54690dc2 42 > c_bin/tmp54690dc2.out 2>&1
compiling:
int i = 0;
int j = 0;
while (i == j) if (i == 0) while (j <= i) if (j == 0) j = 1;
return j;
* TMP FILES:
*  c_obj/tmp54690dc3.s
*  c_obj/tmp54690dc3.o
*  c_bin/tmp54690dc3
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc3.o c_obj/tmp54690dc3.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc3 c_obj/tmp54690dc3.o runtime.c   
* ./c_bin/tmp54690dc3 42 > c_bin/tmp54690dc3.out 2>&1
compiling:
int i = 0;
int j = 0;
for (int x = 0,
int y = 0;
i == j;
) if (i == 0) for (int z = 0,
int u = 0;
j <= i;
) if (j == 0) j = 1;
return j;
* TMP FILES:
*  c_obj/tmp54690dc4.s
*  c_obj/tmp54690dc4.o
*  c_bin/tmp54690dc4
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc4.o c_obj/tmp54690dc4.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc4 c_obj/tmp54690dc4.o runtime.c   
* ./c_bin/tmp54690dc4 42 > c_bin/tmp54690dc4.out 2>&1
compiling:
int x = 10;
int y = 0;
while (x <= 40) if (x <= 20) while (x <= 20) if (x > 0) x = x + 1; else 
x = x + 2; else while (x <= 40) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dc5.s
*  c_obj/tmp54690dc5.o
*  c_bin/tmp54690dc5
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc5.o c_obj/tmp54690dc5.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc5 c_obj/tmp54690dc5.o runtime.c   
* ./c_bin/tmp54690dc5 42 > c_bin/tmp54690dc5.out 2>&1
compiling:
int x = 31;
int y = 0;
while (x <= 40) if (x <= 20) while (x <= 20) if (x > 0) x = x + 1; else 
x = x + 2; else while (x <= 40) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dc6.s
*  c_obj/tmp54690dc6.o
*  c_bin/tmp54690dc6
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc6.o c_obj/tmp54690dc6.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc6 c_obj/tmp54690dc6.o runtime.c   
* ./c_bin/tmp54690dc6 42 > c_bin/tmp54690dc6.out 2>&1
compiling:
int x = 31;
int y = 0;
for (;
x <= 40;
) if (x <= 20) for (;
x <= 20;
) if (x > 0) x = x + 1; else x = x + 2; else for (;
x <= 40;
) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dc7.s
*  c_obj/tmp54690dc7.o
*  c_bin/tmp54690dc7
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc7.o c_obj/tmp54690dc7.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc7 c_obj/tmp54690dc7.o runtime.c   
* ./c_bin/tmp54690dc7 42 > c_bin/tmp54690dc7.out 2>&1
compiling:
int x = 1;
int y = 0;
for (;
x <= 40;
) if (x <= 20) for (;
x <= 20;
) if (x > 0) x = x + 1; else x = x + 2; else for (;
x <= 40;
) if (x > 0) x = x + 3; else x = x + 4;
return x;
* TMP FILES:
*  c_obj/tmp54690dc8.s
*  c_obj/tmp54690dc8.o
*  c_bin/tmp54690dc8
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc8.o c_obj/tmp54690dc8.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc8 c_obj/tmp54690dc8.o runtime.c   
* ./c_bin/tmp54690dc8 42 > c_bin/tmp54690dc8.out 2>&1
compiling:
int x = 0;
int y = 0;
if (x * x * x * x * x * x * x * x * x * x != 0) x = 1;
y = 1;
return x + y;
* TMP FILES:
*  c_obj/tmp54690dc9.s
*  c_obj/tmp54690dc9.o
*  c_bin/tmp54690dc9
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dc9.o c_obj/tmp54690dc9.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dc9 c_obj/tmp54690dc9.o runtime.c   
* ./c_bin/tmp54690dc9 42 > c_bin/tmp54690dc9.out 2>&1
compiling:
int x = 0;
int y = 0;
if (x * x * x * x * x * x * x * x * x * x == 0 * 0 * 0 * 0 * 0 * 0) x = 1;
y = 1;
return x + y;
* TMP FILES:
*  c_obj/tmp54690dca.s
*  c_obj/tmp54690dca.o
*  c_bin/tmp54690dca
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dca.o c_obj/tmp54690dca.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dca c_obj/tmp54690dca.o runtime.c   
* ./c_bin/tmp54690dca 42 > c_bin/tmp54690dca.out 2>&1
compiling:
int x = 0;
int y = 0;
while (x < 10) x = x + 1; y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp54690dcb.s
*  c_obj/tmp54690dcb.o
*  c_bin/tmp54690dcb
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dcb.o c_obj/tmp54690dcb.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dcb c_obj/tmp54690dcb.o runtime.c   
* ./c_bin/tmp54690dcb 42 > c_bin/tmp54690dcb.out 2>&1
compiling:
int x = 0;
int y = 0;
for (;
x < 10;
{
  y = y + 1;
}) x = x + 1;
y = y + 1;
return y;
* TMP FILES:
*  c_obj/tmp54690dcc.s
*  c_obj/tmp54690dcc.o
*  c_bin/tmp54690dcc
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dcc.o c_obj/tmp54690dcc.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dcc c_obj/tmp54690dcc.o runtime.c   
* ./c_bin/tmp54690dcc 42 > c_bin/tmp54690dcc.out 2>&1
compiling:
int x = 0;
for (int i = 0;
i < 100;
i = i + 1;) {
  x = x + 1;
}
x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690dcd.s
*  c_obj/tmp54690dcd.o
*  c_bin/tmp54690dcd
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dcd.o c_obj/tmp54690dcd.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dcd c_obj/tmp54690dcd.o runtime.c   
* ./c_bin/tmp54690dcd 42 > c_bin/tmp54690dcd.out 2>&1
compiling:
int x = 0;
while (x < 100) {
  x = x + 1;
} x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690dce.s
*  c_obj/tmp54690dce.o
*  c_bin/tmp54690dce
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dce.o c_obj/tmp54690dce.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dce c_obj/tmp54690dce.o runtime.c   
* ./c_bin/tmp54690dce 42 > c_bin/tmp54690dce.out 2>&1
compiling:
int x = 0;
if (x < 100) {
  x = x + 1;
} x = x + 1;
return x;
* TMP FILES:
*  c_obj/tmp54690dcf.s
*  c_obj/tmp54690dcf.o
*  c_bin/tmp54690dcf
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dcf.o c_obj/tmp54690dcf.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dcf c_obj/tmp54690dcf.o runtime.c   
* ./c_bin/tmp54690dcf 42 > c_bin/tmp54690dcf.out 2>&1
compiling:
int a = 0;
int i = 0;
while (i < 100) {
  i = i + 1;
  i = i + a;
}
for (int j = 0;
j < i;
j = j + 50;) {
  i = i + 1;
  a = a + 1000;
}
if (a > 0) {
  int i = 100;
  i = i + 1;
  i = i + 1;
} else {
  i = a + i;
  a = 100;
}
i = i + 1;
return i + a;
* TMP FILES:
*  c_obj/tmp54690dd0.s
*  c_obj/tmp54690dd0.o
*  c_bin/tmp54690dd0
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd0.o c_obj/tmp54690dd0.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd0 c_obj/tmp54690dd0.o runtime.c   
* ./c_bin/tmp54690dd0 42 > c_bin/tmp54690dd0.out 2>&1
compiling:
int a = 0;
int i = 0;
i = i + 1;
if (a > 0) {
  int i = 100;
  i = i + 1;
  i = i + 1;
} else {
  i = a + i;
  a = 100;
}
while (i < 100) {
  i = i + 1;
  i = i + a;
}
for (int j = 0;
j < i;
j = j + 50;) {
  i = i + 1;
  a = a + 1000;
}
return i + a * 3 >> 2 << 4;
* TMP FILES:
*  c_obj/tmp54690dd1.s
*  c_obj/tmp54690dd1.o
*  c_bin/tmp54690dd1
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd1.o c_obj/tmp54690dd1.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd1 c_obj/tmp54690dd1.o runtime.c   
* ./c_bin/tmp54690dd1 42 > c_bin/tmp54690dd1.out 2>&1
compiling:
int x1 = 0;
int y1 = x1;
{
  int x2 = -1;
  int y2 = y1;
  {
    int x3 = 2;
    int y3 = y2;
    {
      int x4 = 3;
      int y4 = y3;
      {
        int x2 = 1;
        y1 = x1 + x2 + x3 + x4 + y4;
      }
    }
  }
}
return y1;
* TMP FILES:
*  c_obj/tmp54690dd2.s
*  c_obj/tmp54690dd2.o
*  c_bin/tmp54690dd2
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd2.o c_obj/tmp54690dd2.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd2 c_obj/tmp54690dd2.o runtime.c   
* ./c_bin/tmp54690dd2 42 > c_bin/tmp54690dd2.out 2>&1
compiling:
int x1 = 0;
int y1 = x1;
for (;
y1 < 10;
{
  int x2 = -1;
  int y2 = y1;
  {
    int x3 = 2;
    int y3 = y2;
    {
      int x4 = 3;
      int y4 = y3;
      {
        int x2 = 1;
        y1 = x1 * x2 * x3 + x4 << y4;
      }
    }
  }
}) {
  
}
return y1;
* TMP FILES:
*  c_obj/tmp54690dd3.s
*  c_obj/tmp54690dd3.o
*  c_bin/tmp54690dd3
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd3.o c_obj/tmp54690dd3.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd3 c_obj/tmp54690dd3.o runtime.c   
* ./c_bin/tmp54690dd3 42 > c_bin/tmp54690dd3.out 2>&1
compiling:
int x1 = 0;
int y = 0;
{
  int y1 = x1;
  {
    int x1 = 9;
    y = y + x1;
  }
  y = y + x1;
  {
    int z2 = y;
    int y1 = 100;
    y = y + y1;
    {
      int y = z2;
      int x1 = 100;
      y = x1 + z2;
    }
    y = y + z2;
  }
  y = y + y1 + x1;
  {
    int w = y + 94;
    y = w + 94;
    y = x1 + y + y1;
  }
}
return y;
* TMP FILES:
*  c_obj/tmp54690dd4.s
*  c_obj/tmp54690dd4.o
*  c_bin/tmp54690dd4
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd4.o c_obj/tmp54690dd4.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd4 c_obj/tmp54690dd4.o runtime.c   
* ./c_bin/tmp54690dd4 42 > c_bin/tmp54690dd4.out 2>&1
compiling:
{
  {
    {
      {
        {
          {
            {
              {
                {
                  {
                    {
                      {
                        {
                          {
                            {
                              {
                                {
                                  {
                                    
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
return 0;
* TMP FILES:
*  c_obj/tmp54690dd5.s
*  c_obj/tmp54690dd5.o
*  c_bin/tmp54690dd5
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd5.o c_obj/tmp54690dd5.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd5 c_obj/tmp54690dd5.o runtime.c   
* ./c_bin/tmp54690dd5 42 > c_bin/tmp54690dd5.out 2>&1
compiling:
int x = 1;
int y = x;
{
  int x = 2;
  int y = x;
  {
    int x = 4;
    int y = x;
    {
      int x = 6;
      int y = x;
      {
        int x = 8;
        int y = x;
        {
          int x = 3;
          int y = x;
          {
            int x = 5;
            int y = x;
            {
              int x = 7;
              int y = x;
              {
                int x = 9;
                int y = x;
              }
            }
          }
        }
      }
    }
  }
}
return y;
* TMP FILES:
*  c_obj/tmp54690dd6.s
*  c_obj/tmp54690dd6.o
*  c_bin/tmp54690dd6
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd6.o c_obj/tmp54690dd6.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd6 c_obj/tmp54690dd6.o runtime.c   
* ./c_bin/tmp54690dd6 42 > c_bin/tmp54690dd6.out 2>&1
compiling:
int i = 0;
while (i < 100) {
  int j = 0;
  i = i + 10;
  for (;
  j < 100;
  ) {
    int k = j;
    while (k > -900) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        for (int y = 0;
        y < x;
        y = y + 5;) {
          
        }
      } else {
        int w = 100;
        while (w > -100) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }
}
return i;
* TMP FILES:
*  c_obj/tmp54690dd7.s
*  c_obj/tmp54690dd7.o
*  c_bin/tmp54690dd7
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd7.o c_obj/tmp54690dd7.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd7 c_obj/tmp54690dd7.o runtime.c   
* ./c_bin/tmp54690dd7 42 > c_bin/tmp54690dd7.out 2>&1
compiling:
int i = 0;
for (;
i < 100;
) {
  int j = 0;
  i = i + 10;
  while (j < 100) {
    int k = j;
    for (;
    k > -900;
    ) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        int y = 0;
        while (y < x) {
          y = y + 5;
        }
      } else {
        int w = 100;
        for (;
        w > -100;
        ) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }
}
return i;
* TMP FILES:
*  c_obj/tmp54690dd8.s
*  c_obj/tmp54690dd8.o
*  c_bin/tmp54690dd8
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd8.o c_obj/tmp54690dd8.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd8 c_obj/tmp54690dd8.o runtime.c   
* ./c_bin/tmp54690dd8 42 > c_bin/tmp54690dd8.out 2>&1
compiling:
int i = 0;
while (i < 100) {
  int j = 0;
  i = i + 10;
  for (;
  j < 100;
  {
    int k = j;
    while (k > -900) {
      k = k - 100;
      if (k & 1) {
        int x = 100;
        for (int y = 0;
        y < x;
        y = y + 5;) {
          
        }
      } else {
        int w = 100;
        while (w > -100) {
          w = w - 1;
          w = w - 1;
          w = w - 1;
        }
      }
    }
    j = j + 18 * 1;
  }) {
    
  }
}
return i;
* TMP FILES:
*  c_obj/tmp54690dd9.s
*  c_obj/tmp54690dd9.o
*  c_bin/tmp54690dd9
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dd9.o c_obj/tmp54690dd9.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dd9 c_obj/tmp54690dd9.o runtime.c   
* ./c_bin/tmp54690dd9 42 > c_bin/tmp54690dd9.out 2>&1
compiling:
int x = 1;
if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (
x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (x == 1) if (
x == 1) if (x == 1) if (x == 1) {
  
}
return x;
* TMP FILES:
*  c_obj/tmp54690dda.s
*  c_obj/tmp54690dda.o
*  c_bin/tmp54690dda
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690dda.o c_obj/tmp54690dda.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690dda c_obj/tmp54690dda.o runtime.c   
* ./c_bin/tmp54690dda 42 > c_bin/tmp54690dda.out 2>&1
compiling:
int ARRAY_SIZE = 7;
int x = 0;
int y = 0;
int holder = 0;
int iarray = 0;
int mask = 15;
int correct = 1;
int lastone = -1;
iarray = (iarray & ~mask) + 1;
iarray = (iarray & ~(mask << 4)) + (6 << 4);
iarray = (iarray & ~(mask << 8)) + (9 << 8);
iarray = (iarray & ~(mask << 12)) + (7 << 12);
iarray = (iarray & ~(mask << 16)) + (0 << 16);
iarray = (iarray & ~(mask << 20)) + (4 << 20);
iarray = (iarray & ~(mask << 24)) + (5 << 24);
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) for (int y = 0;
y < ARRAY_SIZE - 1;
y = y + 1;) {
  int a = (iarray & mask << 4 * y) >> 4 * y;
  int b = (iarray & mask << 4 * (y + 1)) >> 4 * (y + 1);
  if (a > b) {
    int holder = b;
    iarray = (iarray & ~(mask << 4 * (y + 1))) + (a << 4 * (y + 1));
    iarray = (iarray & ~(mask << 4 * y)) + (holder << 4 * y);
  }
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (iarray & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp54690ddb.s
*  c_obj/tmp54690ddb.o
*  c_bin/tmp54690ddb
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690ddb.o c_obj/tmp54690ddb.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690ddb c_obj/tmp54690ddb.o runtime.c   
* ./c_bin/tmp54690ddb 42 > c_bin/tmp54690ddb.out 2>&1
compiling:
int ARRAY_SIZE = 7;
int arr = 0;
int temp = 0;
int i = 0;
int j = 0;
int k = 0;
int n = ARRAY_SIZE;
int size = 0;
int l1 = 0;
int h1 = 0;
int l2 = 0;
int h2 = 0;
int mask = 15;
int correct = 1;
int lastone = -1;
arr = (arr & ~mask) + 1;
arr = (arr & ~(mask << 4)) + (6 << 4);
arr = (arr & ~(mask << 8)) + (9 << 8);
arr = (arr & ~(mask << 12)) + (7 << 12);
arr = (arr & ~(mask << 16)) + (0 << 16);
arr = (arr & ~(mask << 20)) + (4 << 20);
arr = (arr & ~(mask << 24)) + (5 << 24);
size = 1;
for (;
size < n;
size = size * 2;) {
  l1 = 0;
  k = 0;
  while (l1 + size < n) {
    h1 = l1 + size - 1;
    l2 = h1 + 1;
    h2 = l2 + size - 1;
    if (h2 >= n) h2 = n - 1;
    i = l1;
    j = l2;
    while (i <= h1 & j <= h2) {
      int ai = (arr & mask << 4 * i) >> 4 * i;
      int aj = (arr & mask << 4 * j) >> 4 * j;
      if (ai <= aj) {
        temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
        k = k + 1;
        i = i + 1;
      } else {
        temp = (temp & ~(mask << 4 * k)) + (aj << 4 * k);
        k = k + 1;
        j = j + 1;
      }
    }
    while (i <= h1) {
      int ai = (arr & mask << 4 * i) >> 4 * i;
      temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
      k = k + 1;
      i = i + 1;
    }
    while (j <= h2) {
      int aj = (arr & mask << 4 * j) >> 4 * j;
      temp = (temp & ~(mask << 4 * k)) + (aj << 4 * k);
      k = k + 1;
      j = j + 1;
    }
    l1 = h2 + 1;
  }
  i = l1;
  for (;
  k < n;
  i = i + 1;) {
    int ai = (arr & mask << 4 * i) >> 4 * i;
    temp = (temp & ~(mask << 4 * k)) + (ai << 4 * k);
    k = k + 1;
  }
  i = 0;
  for (;
  i < n;
  i = i + 1;) {
    int tempi = (temp & mask << 4 * i) >> 4 * i;
    arr = (arr & ~(mask << 4 * i)) + (tempi << 4 * i);
  }
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (arr & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp54690ddc.s
*  c_obj/tmp54690ddc.o
*  c_bin/tmp54690ddc
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690ddc.o c_obj/tmp54690ddc.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690ddc c_obj/tmp54690ddc.o runtime.c   
* ./c_bin/tmp54690ddc 42 > c_bin/tmp54690ddc.out 2>&1
compiling:
int arr = 0;
int ARRAY_SIZE = 7;
int mask = 15;
int correct = 1;
int lastone = -1;
arr = (arr & ~mask) + 1;
arr = (arr & ~(mask << 4)) + (6 << 4);
arr = (arr & ~(mask << 8)) + (9 << 8);
arr = (arr & ~(mask << 12)) + (7 << 12);
arr = (arr & ~(mask << 16)) + (0 << 16);
arr = (arr & ~(mask << 20)) + (4 << 20);
arr = (arr & ~(mask << 24)) + (5 << 24);
{
  int numbers = arr;
  int array_size = ARRAY_SIZE;
  int i = 0;
  int temp = 0;
  int mask = 15;
  i = array_size >> 1;
  for (;
  i >= 0;
  i = i - 1;) {
    int root = i;
    int bottom = array_size - 1;
    int done = 0;
    int maxChild = 0;
    int temp = 0;
    int n1 = 0;
    int n2 = 0;
    done = 0;
    while (root * 2 <= bottom & !done) {
      if (root * 2 == bottom) maxChild = root * 2; else if ((numbers &
                                                             mask <<
                                                             4 * root * 2)
                                                            >> 4 * root * 2 >
                                                            (numbers &
                                                             mask <<
                                                             4 *
                                                             (root * 2 + 1))
                                                            >>
                                                            4 *
                                                            (root * 2 + 1)) 
      maxChild = root * 2; else maxChild = root * 2 + 1;
      n1 = (numbers & mask << 4 * root) >> 4 * root;
      n2 = (numbers & mask << 4 * maxChild) >> 4 * maxChild;
      if (n1 < n2) {
        temp = n1;
        numbers = (numbers & ~(mask << 4 * root)) + (n2 << 4 * root);
        numbers =
        (numbers & ~(mask << 4 * maxChild)) + (temp << 4 * maxChild);
        root = maxChild;
      } else done = 1;
    }
  }
  i = array_size - 1;
  for (;
  i >= 1;
  i = i - 1;) {
    int root = 0;
    int bottom = i - 1;
    int done = 0;
    int maxChild = 0;
    int temp = 0;
    int n1 = 0;
    int n2 = 0;
    temp = numbers & mask;
    numbers = (numbers & ~mask) + ((numbers & mask << 4 * i) >> 4 * i);
    numbers = (numbers & ~(mask << 4 * i)) + (temp << 4 * i);
    done = 0;
    while (root * 2 <= bottom & !done) {
      if (root * 2 == bottom) maxChild = root * 2; else if ((numbers &
                                                             mask <<
                                                             4 * root * 2)
                                                            >> 4 * root * 2 >
                                                            (numbers &
                                                             mask <<
                                                             4 *
                                                             (root * 2 + 1))
                                                            >>
                                                            4 *
                                                            (root * 2 + 1)) 
      maxChild = root * 2; else maxChild = root * 2 + 1;
      n1 = (numbers & mask << 4 * root) >> 4 * root;
      n2 = (numbers & mask << 4 * maxChild) >> 4 * maxChild;
      if (n1 < n2) {
        temp = n1;
        numbers = (numbers & ~(mask << 4 * root)) + (n2 << 4 * root);
        numbers =
        (numbers & ~(mask << 4 * maxChild)) + (temp << 4 * maxChild);
        root = maxChild;
      } else done = 1;
    }
  }
  arr = numbers;
}
for (int x = 0;
x < ARRAY_SIZE;
x = x + 1;) {
  int a = (arr & mask << 4 * x) >> 4 * x;
  if (correct) if (a >= lastone) lastone = a; else correct = 0;
}
return correct;
* TMP FILES:
*  c_obj/tmp54690ddd.s
*  c_obj/tmp54690ddd.o
*  c_bin/tmp54690ddd
* gcc -mstackrealign -c -m32 -o c_obj/tmp54690ddd.o c_obj/tmp54690ddd.s
* gcc -mstackrealign -m32 -o c_bin/tmp54690ddd c_obj/tmp54690ddd.o runtime.c   
* ./c_bin/tmp54690ddd 42 > c_bin/tmp54690ddd.out 2>&1

Easy Parse Tests (20/20 points):
  OK
Medium Parse Tests (10/10 points):
  OK
Parse Error Tests (10/10 points):
  OK
Scope tests (5/5 points):
  OK
Easy tests (15/15 points):
  OK
Medium tests (10/10 points)
  test11: passed
  medium_mw1: passed
  medium_mw3: passed
  medium_mw4: passed
  medium_mw5: passed
  medium_mf1: passed
  medium_mf2: passed
  medium_mf3: passed
  medium_mf4: passed
  medium_uw1: passed
  medium_uf1: failed - Program output 0 expected 41
  medium_uf2: passed
  medium_uimw1: passed
  medium_uimw2: passed
  medium_uimf1: passed
  medium_uimf2: passed
  medium_uwmw1: passed
  medium_ufmf1: passed
  medium_mwmw1: passed
  medium_mwmw2: passed
  medium_mfmf1: passed
  medium_mfmf2: passed
  medium_seq1: passed
  medium_seq2: passed
  medium_seq3: passed
  medium_seq4: passed
  medium_seq5: passed
  medium_seq6: passed
  medium_seq7: passed
  medium_seq8: passed
  medium_seq9: passed
  medium_ctx1: passed
  medium_ctx2: passed
  medium_ctx3: passed
  medium_ctx4: passed
  medium_ctx5: passed
  medium_nest1: passed
  medium_nest2: passed
  medium_nest3: passed
  medium_nest4: passed
Hard tests (0/10 points)
  bsort: failed - Program output 0 expected 1
  msort: failed - Program output 0 expected 1
  hsort: failed - Program output 0 expected 1
Stress tests (hidden) (??/10 points):
  Hidden
StyleManual (??/10 points):
  Hidden
---------------------------------------------------
Passed: 120/124
Failed: 4/124
Score: 70/80 (given)
       ??/20 (hidden)

